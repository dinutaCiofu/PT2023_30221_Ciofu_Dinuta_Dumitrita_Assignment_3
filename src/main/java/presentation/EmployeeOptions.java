package presentation;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;

import javax.swing.*;
import javax.swing.plaf.FontUIResource;
import javax.swing.text.StyleContext;
import java.awt.*;
import java.util.Locale;

public class EmployeeOptions {
    private JPanel mainPanel;
    private JLabel titleLabel;
    private JButton showAllClientsButton;
    private JButton showAllProductsButton;
    private JButton showAllOrdersButton;
    private JButton addAProductButton;
    private JButton deleteAProductButton;
    private JButton deleteAClientButton;
    private JButton backButton;
    private JButton updateAProductButton;
    private JButton updateAClientButton;


    public JButton getUpdateAClientButton() {
        return updateAClientButton;
    }

    public void setUpdateAClientButton(JButton updateAClientButton) {
        this.updateAClientButton = updateAClientButton;
    }

    public JPanel getMainPanel() {
        return mainPanel;
    }

    public void setMainPanel(JPanel mainPanel) {
        this.mainPanel = mainPanel;
    }

    public JLabel getTitleLabel() {
        return titleLabel;
    }

    public void setTitleLabel(JLabel titleLabel) {
        this.titleLabel = titleLabel;
    }

    public JButton getShowAllClientsButton() {
        return showAllClientsButton;
    }

    public void setShowAllClientsButton(JButton showAllClientsButton) {
        this.showAllClientsButton = showAllClientsButton;
    }

    public JButton getShowAllProductsButton() {
        return showAllProductsButton;
    }

    public void setShowAllProductsButton(JButton showAllProductsButton) {
        this.showAllProductsButton = showAllProductsButton;
    }

    public JButton getShowAllOrdersButton() {
        return showAllOrdersButton;
    }

    public void setShowAllOrdersButton(JButton showAllOrdersButton) {
        this.showAllOrdersButton = showAllOrdersButton;
    }

    public JButton getAddAProductButton() {
        return addAProductButton;
    }

    public void setAddAProductButton(JButton addAProductButton) {
        this.addAProductButton = addAProductButton;
    }

    public JButton getDeleteAProductButton() {
        return deleteAProductButton;
    }

    public void setDeleteAProductButton(JButton deleteAProductButton) {
        this.deleteAProductButton = deleteAProductButton;
    }

    public JButton getDeleteAClientButton() {
        return deleteAClientButton;
    }

    public void setDeleteAClientButton(JButton deleteAClientButton) {
        this.deleteAClientButton = deleteAClientButton;
    }

    public JButton getBackButton() {
        return backButton;
    }

    public void setBackButton(JButton backButton) {
        this.backButton = backButton;
    }

    public JButton getUpdateAProductButton() {
        return updateAProductButton;
    }

    public void setUpdateAProductButton(JButton updateAProductButton) {
        this.updateAProductButton = updateAProductButton;
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        mainPanel = new JPanel();
        mainPanel.setLayout(new GridLayoutManager(11, 1, new Insets(10, 60, 30, 60), -1, -1));
        mainPanel.setBackground(new Color(-4489102));
        mainPanel.setForeground(new Color(-4489102));
        titleLabel = new JLabel();
        Font titleLabelFont = this.$$$getFont$$$("Comic Sans MS", Font.BOLD, 36, titleLabel.getFont());
        if (titleLabelFont != null) titleLabel.setFont(titleLabelFont);
        titleLabel.setForeground(new Color(-16766021));
        titleLabel.setText("Employee options");
        mainPanel.add(titleLabel, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label1 = new JLabel();
        label1.setIcon(new ImageIcon(getClass().getResource("/choice.png")));
        label1.setText("");
        mainPanel.add(label1, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        showAllClientsButton = new JButton();
        showAllClientsButton.setBackground(new Color(-16766021));
        Font showAllClientsButtonFont = this.$$$getFont$$$(null, Font.BOLD, 14, showAllClientsButton.getFont());
        if (showAllClientsButtonFont != null) showAllClientsButton.setFont(showAllClientsButtonFont);
        showAllClientsButton.setForeground(new Color(-1));
        showAllClientsButton.setText("Show all clients");
        mainPanel.add(showAllClientsButton, new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        showAllProductsButton = new JButton();
        showAllProductsButton.setBackground(new Color(-16766021));
        Font showAllProductsButtonFont = this.$$$getFont$$$(null, Font.BOLD, 14, showAllProductsButton.getFont());
        if (showAllProductsButtonFont != null) showAllProductsButton.setFont(showAllProductsButtonFont);
        showAllProductsButton.setForeground(new Color(-1));
        showAllProductsButton.setText("Show all products");
        mainPanel.add(showAllProductsButton, new GridConstraints(3, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        showAllOrdersButton = new JButton();
        showAllOrdersButton.setBackground(new Color(-16766021));
        Font showAllOrdersButtonFont = this.$$$getFont$$$(null, Font.BOLD, 14, showAllOrdersButton.getFont());
        if (showAllOrdersButtonFont != null) showAllOrdersButton.setFont(showAllOrdersButtonFont);
        showAllOrdersButton.setForeground(new Color(-1));
        showAllOrdersButton.setText("Show all orders");
        mainPanel.add(showAllOrdersButton, new GridConstraints(4, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        deleteAProductButton = new JButton();
        deleteAProductButton.setBackground(new Color(-16766021));
        Font deleteAProductButtonFont = this.$$$getFont$$$(null, Font.BOLD, 14, deleteAProductButton.getFont());
        if (deleteAProductButtonFont != null) deleteAProductButton.setFont(deleteAProductButtonFont);
        deleteAProductButton.setForeground(new Color(-1));
        deleteAProductButton.setText("Delete a product");
        mainPanel.add(deleteAProductButton, new GridConstraints(6, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        addAProductButton = new JButton();
        addAProductButton.setBackground(new Color(-16766021));
        Font addAProductButtonFont = this.$$$getFont$$$(null, Font.BOLD, 14, addAProductButton.getFont());
        if (addAProductButtonFont != null) addAProductButton.setFont(addAProductButtonFont);
        addAProductButton.setForeground(new Color(-1));
        addAProductButton.setText("Add a product");
        mainPanel.add(addAProductButton, new GridConstraints(5, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        backButton = new JButton();
        backButton.setBackground(new Color(-16766021));
        Font backButtonFont = this.$$$getFont$$$(null, Font.BOLD, 14, backButton.getFont());
        if (backButtonFont != null) backButton.setFont(backButtonFont);
        backButton.setForeground(new Color(-1));
        backButton.setText("Back");
        mainPanel.add(backButton, new GridConstraints(10, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        updateAProductButton = new JButton();
        updateAProductButton.setBackground(new Color(-16766021));
        Font updateAProductButtonFont = this.$$$getFont$$$(null, Font.BOLD, 14, updateAProductButton.getFont());
        if (updateAProductButtonFont != null) updateAProductButton.setFont(updateAProductButtonFont);
        updateAProductButton.setForeground(new Color(-1));
        updateAProductButton.setText("Update a product");
        mainPanel.add(updateAProductButton, new GridConstraints(8, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        updateAClientButton = new JButton();
        updateAClientButton.setBackground(new Color(-16766021));
        Font updateAClientButtonFont = this.$$$getFont$$$(null, Font.BOLD, 14, updateAClientButton.getFont());
        if (updateAClientButtonFont != null) updateAClientButton.setFont(updateAClientButtonFont);
        updateAClientButton.setForeground(new Color(-1));
        updateAClientButton.setText("Update a client");
        mainPanel.add(updateAClientButton, new GridConstraints(9, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        deleteAClientButton = new JButton();
        deleteAClientButton.setBackground(new Color(-16766021));
        Font deleteAClientButtonFont = this.$$$getFont$$$(null, Font.BOLD, 14, deleteAClientButton.getFont());
        if (deleteAClientButtonFont != null) deleteAClientButton.setFont(deleteAClientButtonFont);
        deleteAClientButton.setForeground(new Color(-1));
        deleteAClientButton.setText("Delete a client");
        mainPanel.add(deleteAClientButton, new GridConstraints(7, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    private Font $$$getFont$$$(String fontName, int style, int size, Font currentFont) {
        if (currentFont == null) return null;
        String resultName;
        if (fontName == null) {
            resultName = currentFont.getName();
        } else {
            Font testFont = new Font(fontName, Font.PLAIN, 10);
            if (testFont.canDisplay('a') && testFont.canDisplay('1')) {
                resultName = fontName;
            } else {
                resultName = currentFont.getName();
            }
        }
        Font font = new Font(resultName, style >= 0 ? style : currentFont.getStyle(), size >= 0 ? size : currentFont.getSize());
        boolean isMac = System.getProperty("os.name", "").toLowerCase(Locale.ENGLISH).startsWith("mac");
        Font fontWithFallback = isMac ? new Font(font.getFamily(), font.getStyle(), font.getSize()) : new StyleContext().getFont(font.getFamily(), font.getStyle(), font.getSize());
        return fontWithFallback instanceof FontUIResource ? fontWithFallback : new FontUIResource(fontWithFallback);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return mainPanel;
    }

}
